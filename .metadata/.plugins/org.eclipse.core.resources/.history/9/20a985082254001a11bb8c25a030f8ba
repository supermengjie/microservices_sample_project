package com.infosys.profile.controller;

import java.net.URI;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cloud.client.ServiceInstance;
import org.springframework.cloud.client.discovery.DiscoveryClient;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.infosys.profile.dto.CustomerDTO;
import com.infosys.profile.dto.EquipmentDTO;
import com.infosys.profile.dto.ProfileDTO;

@RestController
@RequestMapping("profile")
public class Profile_Controller {
	
	Logger logger = LoggerFactory.getLogger(this.getClass());
	@Autowired
	DiscoveryClient discoveryClient;
	
	
	@GetMapping("/{id}")
	public ProfileDTO getProfile(@PathVariable int id) {
		logger.info("Profile request for customer Id {}", id);
		List<ServiceInstance> friendInstances= discoveryClient.getInstances("customer_service");
		ServiceInstance serviceInstance=friendInstances.get(0);
		URI friendUri = serviceInstance.getUri();
		CustomerDTO customer =new customer;
		try {
			=new RestTemplate().getForObject(friendUri+"customers/"+id,CustomerDTO.class);
		}
		catch(RuntimeException ex) {
			throw ex;
		}
		friendInstances= discoveryClient.getInstances("equipment_service");
		serviceInstance=friendInstances.get(0);
		friendUri = serviceInstance.getUri();
		
		ResponseEntity<List<EquipmentDTO>> responseBody = new RestTemplate().exchange(friendUri+"equipments/"+id,HttpMethod.GET, null, new ParameterizedTypeReference<List<EquipmentDTO>>() {});
		
		ProfileDTO profile = new ProfileDTO();
		profile.setId(id);
		profile.setName(customer.getName());
		profile.setAddress(customer.getAddress());
		
		profile.setEquipment(responseBody.getBody());
		logger.info("Profile for customerId{} : {}", id, profile);
		return profile;
	}

}
