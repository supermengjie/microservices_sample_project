package com.infosys.customer_service.controller;

import static org.hamcrest.core.Is.is;
import static org.mockito.BDDMockito.given;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.test.web.servlet.MockMvc;
import static org.hamcrest.Matchers.hasSize;
import static org.hamcrest.core.Is.is;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.BDDMockito.given;
import static org.mockito.Mockito.*;
import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

import com.infosys.cutomer_service.controller.CustomerController;
import com.infosys.cutomer_service.dto.CustomerDTO;

@RunWith(SpringRunner.class)
@WebMvcTest(CustomerController.class)
public class CustomerControllerTest {
	@Autowired
	private MockMvc mvc;
	
	@MockBean
	private CustomerController customerController;
	
	@Test
	public void getCustomerswithId() throws Exception{
		CustomerDTO customer1= new CustomerDTO();
		customer1.setId(1);
		customer1.setName("james");
		given(customerController.getCustomer(customer1.getId())).willReturn(customer1);
		mvc.perform(get("/customers"))
		.andExpect(status().isOk())
		.andExpect(jsonPath("name", is(customer1.getName())))
		.andExpect(jsonPath("Id"), is(customer1.getId()));
		
	}
}
